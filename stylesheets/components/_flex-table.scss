@import "../base/common-web-component";
@import "flex-grid";


///@private
@mixin _flex-table-breakpoint($breakpoint,$headers,$len,$tag){
  @include media-breakpoint($breakpoint){
    section {
      #{$tag} {
        @for $i from 1 through $len{
          &:nth-of-type(#{$len}n + #{$i}){
            &:before{
              content: '#{nth($headers,$i)}';
            }
          }
        }
      }
    }
  }
}


@mixin _flex-table-touch-headers($breakpoint,$headers,$len,$tag){
  &.breakpoint{
    @include _flex-table-breakpoint($breakpoint,$headers,$len,$tag);
  }
  &[breakpoint="1000"]{
    @include _flex-table-breakpoint(1000px,$headers,$len,$tag);
  }
  &[breakpoint="950"]{
    @include _flex-table-breakpoint(950px,$headers,$len,$tag);
  }
  &[breakpoint="900"]{
    @include _flex-table-breakpoint(900px,$headers,$len,$tag);
  }
  &[breakpoint="850"]{
    @include _flex-table-breakpoint(850px,$headers,$len,$tag);
  }
  &[breakpoint="800"]{
    @include _flex-table-breakpoint(800px,$headers,$len,$tag);
  }
  &[breakpoint="750"]{
    @include _flex-table-breakpoint(750px,$headers,$len,$tag);
  }
  &[breakpoint="700"]{
    @include _flex-table-breakpoint(700px,$headers,$len,$tag);
  }
  &[breakpoint="650"]{
    @include _flex-table-breakpoint(650px,$headers,$len,$tag);
  }
  &[breakpoint="600"]{
    @include _flex-table-breakpoint(600px,$headers,$len,$tag);
  }
}



///@public
/// @param {String} $component
/// @param {List} $tags
/// @param {String} $template-tag
/// @param {String} $class
/// @param {List} $headers
/// @param {Map} $map
///  $map:(
///   font-size:<value>,
///   border-radius:<value>,
///   columns:<value>,
///   justification:<value>,
///   alignment:<value>,
///   header:(
///       background:<value>,
///       color:<value>,
///       font:<value>,
///       bold:<value>,
///       icon-font:<value>,
///       icon-up:<value>,
///       icon-down:<value>
///   ),
///   cell:(
///        background:<value>,
///        justification:<value>,
///        alignment:<value>,
///        padding:<value>,
///        height:<value>,
///        show-borders:<value>,
///        background:<value>
///        background-alt:<value>
///   ),
///   footer:(
///        background:<value>
///   ),
///   touch:(
///        breakpoint:<value>,
///        cell-padding:<value>,
///        cell-padding-bottom:<value>,
///        cell-margin-top:<value>,
///        cell-border-bottom:<value>,
///        font-size:<value>,
///        border-radius:<value>,
///        header-left:<value>
///   )
/// )
@mixin flex-table($component:css-flex-table,$tags:null,$template-tag:null,$class:null,$headers:(),$map:()){

  $_white:map-get($Base,white);
  $_icon-font-family:map-get($Icons,font-family);

  $font-size:map-get-default($map,font-size,1em);
  $border-radius:map-get-default($map,border-radius,0);
  $columns:map-get-default($map,columns,4);
  $header-background:map-nested-get-default($map,header,background,$_white);
  $header-color:map-nested-get($map,header,color);
  $header-font:map-nested-get($map,header,font);
  $header-bold:map-nested-get($map,header,bold);
  $header-icon-font:map-nested-get-default($map,header,icon-font,$_icon-font-family);
  $header-icon-up:map-nested-get-default($map,header,icon-up,\e1a6);
  $header-icon-down:map-nested-get-default($map,header,icon-down,\e1a5);
  $justification:map-get-default($map,justification,flex-start);
  $alignment:map-get-default($map,alignment,center);
  $cell-justification:map-nested-get-default($map,cell,justification,center);
  $cell-alignment:map-nested-get-default($map,cell,alignment,flex-start);
  $cell-padding:map-nested-get-default($map,cell,padding,.3em .5em .3em 1em);
  $cell-height:map-nested-get-default($map,cell,height,40px);
  $cell-show-borders:map-nested-get-default($map,cell,show-borders,true);
  $cell-background:map-nested-get-default($map,cell,background,$_white);
  $cell-background-alt:map-nested-get-default($map,cell,background-alt,#f5f5f5);
  $footer-background:map-nested-get-default($map,footer,background,$_white);
  $touch-breakpoint:map-nested-get-default($map,touch,breakpoint,750px);
  $touch-cell-padding:map-nested-get-default($map,touch,cell-padding,0 .5em 1em 11em);
  $touch-cell-padding-bottom:map-nested-get-default($map,touch,cell-padding-bottom,2em);
  $touch-cell-margin-top:map-nested-get-default($map,touch,cell-margin-top,1em);
  $touch-cell-border-bottom:map-nested-get-default($map,touch,cell-border-bottom,1px solid #ddd);
  $touch-font-size:map-nested-get-default($map,touch,font-size,16px);
  $touch-border-radius:map-nested-get-default($map,touch,border-radius,0);
  $touch-header-left:map-nested-get-default($map,touch,header-left,10px);

  $tag:flex-table;
  @include element-tag($tag:$tag,$tags:$tags,$class:$class){
    @include _flex-grid($component,$font-size,$border-radius,$columns,$header-color,$header-font,$header-bold,$header-background,$header-icon-font,$header-icon-up,$header-icon-down,
            $justification,$alignment,$cell-justification,$cell-alignment,$cell-padding,$cell-height,$cell-show-borders,$cell-background,$cell-background-alt,
            $footer-background, $touch-breakpoint, $touch-cell-padding,$touch-cell-padding-bottom,$touch-cell-margin-top,$touch-cell-border-bottom,
            $touch-font-size,$touch-border-radius,$touch-header-left,cell-item);
    @content;

    $len:length($headers);
    @if $len > 0{
      @include _flex-table-touch-headers($touch-breakpoint,$headers,$len,cell-item);
    }

  }
}
